package ${pacoteArquivo};

<#if gerarSalvar>
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ResponseStatus;
</#if>
<#if gerarDelete>
import org.springframework.web.bind.annotation.DeleteMapping;
</#if>
<#if gerarBuscarPorId || gerarPesquisar>
import org.springframework.web.bind.annotation.GetMapping;
</#if>
<#if gerarBuscarPorId>
import jakarta.validation.constraints.NotNull;
import ${pacoteArquivo}.response.${nome}Response;
</#if>
<#if gerarSalvar>
import org.springframework.web.bind.annotation.PostMapping;
import ${pacoteArquivo}.request.${nome}NovoRequest;
</#if>
<#if gerarAtualizar>
import org.springframework.web.bind.annotation.PutMapping;
</#if>
<#if (gerarAtualizar) || (gerarBuscarPorId)>
import org.springframework.web.bind.annotation.PathVariable;
</#if>
<#if (gerarAtualizar) || (gerarSalvar)>
import org.springframework.web.bind.annotation.RequestBody;
import ${pacoteArquivo}.request.${nome}AtualizacaoRequest;
</#if>
import org.springframework.web.bind.annotation.RestController;

<#if gerarPesquisar>
import br.org.curitiba.ici.saude.usuario.common.PageResponse;
import br.org.curitiba.ici.saude.usuario.common.PaginationRequest;
import ${pacoteArquivo}.request.${nome}PesquisaRequest;
import ${pacoteArquivo}.response.${nome}PesquisaResponse;
</#if>
import ${pacote}.service.${nome}Service;
import ${pacote}.rest.mapper.${nome}Mapper;
<#if (gerarSalvar) || (gerarAtualizar)>
import jakarta.validation.Valid;
</#if>
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.RequestMapping;

@RequiredArgsConstructor
@RestController
@RequestMapping("/${path}")
public class ${nome}Controller {
  private final ${nome}Service ${nomeVariavel}Service;
  private final ${nome}Mapper ${nomeVariavel}Mapper;

<#if gerarSalvar>
  @ResponseStatus(value = HttpStatus.CREATED)
  @PostMapping
  public Integer salvar(@RequestBody @Valid ${nome}NovoRequest request) {
    return ${nomeVariavel}Service.salvar(${nomeVariavel}Mapper.toEntity(request)).getCd${nome}();
  }
  
</#if>
<#if gerarAtualizar>
  @PutMapping(path = "/{id}")
  public void atualizar(@RequestBody @Valid ${nome}AtualizacaoRequest request,
      @NotNull @PathVariable("id") Integer id) {
    ${nomeVariavel}Service.salvar(${nomeVariavel}Mapper.toEntity(${nomeVariavel}Service.buscarPorIdOuThrow(id), request));
  }
  
</#if>
<#if gerarBuscarPorId>
  @GetMapping(path = "/{id}")
  public ${nome}Response buscarPorId(@NotNull @PathVariable("id") Integer id) {
    return ${nomeVariavel}Mapper.toResponse(${nomeVariavel}Service.buscarPorIdOuThrow(id));
  }
  
</#if>
<#if gerarDelete>
  @DeleteMapping(path = "/{id}")
  public void deletar(@NotNull @PathVariable("id") Integer id) {
    ${nomeVariavel}Service.deletarPorId(id);
  }
  
</#if>
<#if gerarPesquisar>
  @GetMapping
  public PageResponse<${nome}PesquisaResponse> pesquisar(${nome}PesquisaRequest request,
      PaginationRequest paginationRequest) {
    return ${nomeVariavel}Mapper.toResponse(
        ${nomeVariavel}Service.pesquisarView(paginationRequest.toPageable(), request.toParametros()));
  }
  
</#if>  
}
